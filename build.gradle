plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.github.can019'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

tasks.withType(Test){
	useJUnitPlatform()
	maxParallelForks = Runtime.runtime.availableProcessors()
}

sourceSets {
	integrationTest {
		java.srcDir "$projectDir/src/integration/java"
		resources.srcDir "$projectDir/src/integration/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}

	unitTest {
		java.srcDir "$projectDir/src/unit/java"
		resources.srcDir "$projectDir/src/unit/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	integrationTestImplementation.extendsFrom implementation
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly

	unitTestImplementation.extendsFrom implementation
	unitTestImplementation.extendsFrom testImplementation
	unitTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// uuid-v1
	implementation 'com.fasterxml.uuid:java-uuid-generator:5.0.0'

	testImplementation "org.testcontainers:mysql:1.19.8"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
	testImplementation "org.testcontainers:mysql:1.19.8"
	testImplementation "org.testcontainers:testcontainers:1.19.8"
	testImplementation "org.testcontainers:junit-jupiter:1.19.8"
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

task unitTest(type: Test) {
	testClassesDirs = sourceSets.unitTest.output.classesDirs
	classpath = sourceSets.unitTest.runtimeClasspath
}

check.dependsOn integrationTest
check.dependsOn unitTest